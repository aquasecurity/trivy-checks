cloudformation:
  good:
    - |-
      Resources:
        GoodExample:
          Type: AWS::EKS::Cluster
          Properties:
            EncryptionConfig:
              Provider:
                KeyArn: alias/eks-kms
              Resources:
                - secrets
            Name: goodExample
            ResourcesVpcConfig:
              SecurityGroupIds:
                - sg-6979fe18
              SubnetIds:
                - subnet-6782e71e
                - subnet-e7e761ac
            RoleArn: arn:aws:iam::012345678910:role/eks-service-role-good-example
            Version: "1.14"
  bad:
    - |-
      Resources:
        BadExample:
          Type: AWS::EKS::Cluster
          Properties:
            Name: badExample
            ResourcesVpcConfig:
              SecurityGroupIds:
                - sg-6979fe18
              SubnetIds:
                - subnet-6782e71e
                - subnet-e7e761ac
            RoleArn: arn:aws:iam::012345678910:role/eks-service-role-bad-example
            Version: "1.14"
terraform:
  good:
    - |-
      resource "aws_eks_cluster" "good_example" {
        encryption_config {
          resources = ["secrets"]
          provider {
            key_arn = var.kms_arn
          }
        }

        name     = "good_example_cluster"
        role_arn = var.cluster_arn
        vpc_config {
          endpoint_public_access = false
        }
      }
  bad:
    - |-
      resource "aws_eks_cluster" "bad_example" {
        name = "bad_example_cluster"

        role_arn = var.cluster_arn
        vpc_config {
          endpoint_public_access = false
        }
      }
