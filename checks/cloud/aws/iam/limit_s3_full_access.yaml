cloudformation:
  good:
    - |-
      AWSTemplateFormatVersion: "2010-09-09"

      Resources:
        GoodPolicy:
          Type: AWS::IAM::Policy
          Properties:
            PolicyName: good_policy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:PutObject
                  Resource: arn:aws:s3:::examplebucket/*
            Roles:
              - !Ref GoodRole

        GoodRole:
          Type: AWS::IAM::Role
          Properties:
            RoleName: good_role
            AssumeRolePolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Principal:
                    Service: ec2.amazonaws.com
                  Action: sts:AssumeRole
  bad:
    - |-
      AWSTemplateFormatVersion: "2010-09-09"

      Resources:
        BadPolicy:
          Type: AWS::IAM::Policy
          Properties:
            PolicyName: bad_policy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: s3:*
                  Resource: '*'
            Roles:
              - !Ref BadRole

        BadRole:
          Type: AWS::IAM::Role
          Properties:
            RoleName: bad_role
            AssumeRolePolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Principal:
                    Service: ec2.amazonaws.com
                  Action: sts:AssumeRole
terraform:
  good:
    - |-
      resource "aws_iam_policy" "good_policy" {
        name = "good_policy"
        policy = jsonencode({
          Version = "2012-10-17"
          Statement = [
            {
              Effect = "Allow"
              Action = [
                "s3:GetObject",
                "s3:PutObject"
              ]
              Resource = "arn:aws:s3:::examplebucket/*"
            }
          ]
        })
      }

      resource "aws_iam_role" "good_role" {
        name = "good_role"
        assume_role_policy = jsonencode({
          Version = "2012-10-17"
          Statement = [
            {
              Effect = "Allow"
              Principal = {
                Service = "ec2.amazonaws.com"
              }
              Action = "sts:AssumeRole"
            }
          ]
        })
      }

      resource "aws_iam_role_policy_attachment" "good_role_policy_attachment" {
        role       = aws_iam_role.good_role.name
        policy_arn = aws_iam_policy.good_policy.arn
      }
  bad:
    - |-
      resource "aws_iam_policy" "bad_policy" {
        name = "bad_policy"
        policy = jsonencode({
          Version = "2012-10-17"
          Statement = [
            {
              Effect   = "Allow"
              Action   = "s3:*"
              Resource = "*"
            }
          ]
        })
      }

      resource "aws_iam_role_policy_attachment" "test" {
        role       = aws_iam_role.test.name
        policy_arn = "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      }

      resource "aws_iam_role" "bad_role" {
        name = "bad_role"
        assume_role_policy = jsonencode({
          Version = "2012-10-17"
          Statement = [
            {
              Effect = "Allow"
              Principal = {
                Service = "ec2.amazonaws.com"
              }
              Action = "sts:AssumeRole"
            }
          ]
        })
      }

      resource "aws_iam_role_policy_attachment" "bad_role_policy_attachment" {
        role       = aws_iam_role.bad_role.name
        policy_arn = aws_iam_policy.bad_policy.arn
      }
