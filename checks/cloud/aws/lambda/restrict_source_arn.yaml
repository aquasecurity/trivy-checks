cloudformation:
  good:
    - |-
      Resources:
        GoodExample:
          Type: AWS::Lambda::Function
          Properties:
            Code:
              S3Bucket: my-bucket
              S3Key: function.zip
            Handler: index.handler
            Role: arn:aws:iam::123456789012:role/lambda-role
            Runtime: nodejs12.x
            Timeout: 5
            TracingConfig:
              Mode: Active
            VpcConfig:
              SecurityGroupIds:
                - sg-085912345678492fb
              SubnetIds:
                - subnet-071f712345678e7c8
                - subnet-07fd123456788a036

        GoodPermission:
          Type: AWS::Lambda::Permission
          Properties:
            Action: lambda:InvokeFunction
            FunctionName: !Ref GoodExample
            Principal: s3.amazonaws.com
            SourceArn: lambda.amazonaws.com
  bad:
    - |-
      Resources:
        BadExample:
          Type: AWS::Lambda::Function
          Properties:
            Code:
              S3Bucket: my-bucket
              S3Key: function.zip
            Handler: index.handler
            Role: arn:aws:iam::123456789012:role/lambda-role
            Runtime: nodejs12.x
            Timeout: 5
            TracingConfig:
              Mode: Active
            VpcConfig:
              SecurityGroupIds:
                - sg-085912345678492fb
              SubnetIds:
                - subnet-071f712345678e7c8
                - subnet-07fd123456788a036

        BadPermission:
          Type: AWS::Lambda::Permission
          Properties:
            Action: lambda:InvokeFunction
            FunctionName: !Ref BadExample
            Principal: s3.amazonaws.com
terraform:
  good:
    - |-
      resource "aws_lambda_permission" "good_example" {
        statement_id  = "AllowExecutionFromSNS"
        action        = "lambda:InvokeFunction"
        function_name = aws_lambda_function.func.function_name
        principal     = "sns.amazonaws.com"
        source_arn    = aws_sns_topic.default.arn
      }
  bad:
    - |-
      resource "aws_lambda_permission" "bad_example" {
        statement_id  = "AllowExecutionFromSNS"
        action        = "lambda:InvokeFunction"
        function_name = aws_lambda_function.func.function_name
        principal     = "sns.amazonaws.com"
      }
